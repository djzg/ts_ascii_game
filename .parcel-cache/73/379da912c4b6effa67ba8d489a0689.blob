"use strict";

var _Color = _interopRequireDefault(require("./Color"));

var _Layer = _interopRequireDefault(require("./Layer"));

var _Renderer = _interopRequireDefault(require("./Renderer"));

var _tile = _interopRequireDefault(require("./tile"));

var _Vector = _interopRequireDefault(require("./Vector"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const WIDTH = 80;
const HEIGHT = 24;
const layers = {
  background: new _Layer.default({
    size: new _Vector.default(WIDTH, HEIGHT)
  }),
  actor: new _Layer.default({
    size: new _Vector.default(WIDTH, HEIGHT)
  })
};
const player = new _tile.default({
  background: new _Color.default(0, 0, 0, 0),
  char: '@',
  color: new _Color.default(255, 0, 0),
  isVisible: true,
  pos: _Vector.default.Zero()
});
const backgroundTiles = Array.from({
  length: WIDTH * HEIGHT
}, (_, i) => {
  const x = i % WIDTH;
  const y = Math.floor(i / WIDTH);
  return new _tile.default({
    char: '-',
    pos: new _Vector.default(x, y)
  });
});
const renderer = new _Renderer.default();
renderer.addLayer('background', layers.background);
renderer.addLayer('actor', layers.actor);

const draw = () => {
  backgroundTiles.forEach(tile => layers.background.draw(tile));
  layers.actor.draw(player);
  renderer.commit();
};

document.addEventListener('keydown', e => {
  switch (e.key) {
    case 'ArrowUp':
      {
        player.pos.add(new _Vector.default(0, -1));
        break;
      }

    case 'ArrowDown':
      {
        player.pos.add(new _Vector.default(0, 1));
        break;
      }

    case 'ArrowLeft':
      {
        player.pos.add(new _Vector.default(-1, 0));
        break;
      }

    case 'ArrowRight':
      {
        player.pos.add(new _Vector.default(1, 0));
        break;
      }
  }
});